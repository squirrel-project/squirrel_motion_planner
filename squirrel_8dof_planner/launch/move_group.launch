<?xml version="1.0"?>
<launch>
  <!-- GDB Debug Option -->
  <!-- Verbose Mode Option -->
  <arg name="info" default="true" />
  <arg unless="$(arg info)" name="command_args" value="" />
  <arg     if="$(arg info)" name="command_args" value="--debug" />

  <!-- move_group settings -->
  <arg name="publish_monitored_planning_scene" default="true"/>

  <!-- Start the actual move_group node/action server -->
  <node name="move_group" launch-prefix="" pkg="moveit_ros_move_group" type="move_group" respawn="false" output="screen" args="$(arg command_args)">
    <!-- Set the display variable, in case OpenGL code is used internally -->
    <env name="DISPLAY" value="$(optenv DISPLAY :0)" />

    <!-- MoveGroup capabilities to load -->
    <param name="capabilities" value="move_group/MoveGroupCartesianPathService
                  move_group/MoveGroupExecuteService
                  move_group/MoveGroupKinematicsService
                  move_group/MoveGroupMoveAction
                  move_group/MoveGroupPickPlaceAction
                  move_group/MoveGroupPlanService
                  move_group/MoveGroupQueryPlannersService
                  move_group/MoveGroupStateValidationService
                  move_group/MoveGroupGetPlanningSceneService
                  move_group/ClearOctomapService" />

    <!-- Publish the planning scene of the physical robot so that rviz plugin can know actual robot -->
    <param name="planning_scene_monitor/publish_planning_scene" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_geometry_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_state_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="planning_scene_monitor/publish_transforms_updates" value="$(arg publish_monitored_planning_scene)" />
    <param name="octomap_resolution" value="0.05" />
  </node>
</launch>
